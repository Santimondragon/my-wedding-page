---
interface Props {
  path: string;
  alt: string;
  isWhite?: boolean;
}

const { path, alt, isWhite = false } = Astro.props;
---

<div class="image-background">
  <div class="image-background__background">
    <img class="image-background__background-image" src={path} alt={alt} />
    <div class="image-background__background-overlay" data-is-white={isWhite}></div>
  </div>
  <div class="image-background__image-wrapper">
    <img class="image-background__image" src={path} alt={alt} />
  </div>
</div>

<style>
  .image-background {
    z-index: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .image-background__background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .image-background__background-image {
    position: absolute;
    max-height: 100%;
    width: 100vw;
    object-fit: cover;
    z-index: 0;
  }

  .image-background__background-overlay {
    position: absolute;
    width: 100vw;
    height: 100%;
    z-index: 1;
    mix-blend-mode: multiply;
    backdrop-filter: blur(1rem);
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.5));

    &[data-is-white='true'] {
      background: linear-gradient(to bottom, var(--white), rgba(255, 255, 255, 0.5));
    }
  }

  .image-background__image-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    box-shadow: 0 0 6rem -2rem rgba(223, 222, 165, 0.5);
  }

  .image-background__image {
    position: relative;
    aspect-ratio: 16 / 9;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }
</style>
