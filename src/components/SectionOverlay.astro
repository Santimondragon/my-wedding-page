---
interface Props {
  position?: 'top' | 'bottom';
  isBigger?: boolean;
  isDarker?: boolean;
}

const { position = 'top', isBigger = false, isDarker = false } = Astro.props;
---

<div
  class="section-overlay"
  data-position={position}
  data-is-bigger={isBigger}
  data-is-darker={isDarker}
>
</div>

<style>
  .section-overlay {
    position: absolute;
    left: 0;
    width: 100%;
    height: 35%;
    z-index: 1;
    mix-blend-mode: multiply;
  }

  .section-overlay[data-is-bigger='true'] {
    height: 70%;
  }

  .section-overlay[data-position='top'] {
    top: 0;
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));

    &[data-is-darker='true'] {
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
    }
  }

  .section-overlay[data-position='bottom'] {
    bottom: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));

    &[data-is-darker='true'] {
      background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
    }
  }
</style>
