---
import '../styles/index.css';
import { checkAuth } from '../middleware/auth';
import Button from '../components/Button.astro';

// Check if already authenticated
const { isAuthorized } = await checkAuth(Astro);

if (isAuthorized) {
  return Astro.redirect('/admin');
}
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Login - Admin Dashboard</title>
  </head>
  <body>
    <main>
      <div class="login">
        <h1 class="heading heading--2">Admin Login</h1>
        <form id="login-form" class="login-form">
          <div class="form-group">
            <label for="password" class="text">Password</label>
            <input type="password" id="password" name="password" required class="input" />
          </div>
          <p id="error-message" class="text text--error"></p>
          <div id="loading" class="loading" style="display: none;">
            <span class="loading-text">Loading...</span>
          </div>
          <Button text="Login" color="black" type="submit" />
        </form>
      </div>
    </main>
  </body>
</html>

<style>
  main {
    height: 100vh;
    width: 100%;
    display: grid;
    place-items: center;
    background-color: var(--white);
  }

  .login {
    max-width: 40rem;
    width: 100%;
    padding: 4rem;
    background-color: #f8f9fa;
    border-radius: 0.8rem;
    box-shadow: 0 0 2rem rgba(0, 0, 0, 0.1);

    h1 {
      text-align: center;
      margin-bottom: 3.2rem;
    }
  }

  .login-form {
    display: flex;
    flex-direction: column;
    gap: 2.4rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }

  .input {
    padding: 1.2rem;
    border: 1px solid var(--black);
    border-radius: 0.4rem;
    font-size: 1.6rem;
  }

  .text--error {
    color: #dc3545;
    text-align: center;
    min-height: 2rem;
  }

  .loading {
    text-align: center;
    margin-bottom: 1rem;
  }

  .loading-text {
    font-size: 1.4rem;
    color: var(--black);
  }

  .button {
    width: 100%;
  }
</style>

<script>
  const ADMIN_PASSWORD = import.meta.env.PUBLIC_ADMIN_PASSWORD;
  const AUTH_COOKIE = 'admin-auth';

  if (!ADMIN_PASSWORD) {
    throw new Error('PUBLIC_ADMIN_PASSWORD environment variable is not set');
  }

  const form = document.getElementById('login-form');
  const errorMessage = document.getElementById('error-message');
  const loading = document.getElementById('loading');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    if (errorMessage) errorMessage.textContent = '';
    if (loading) loading.style.display = 'block';

    const formData = new FormData(e.target as HTMLFormElement);
    const password = formData.get('password') as string;

    try {
      console.log('Login: Starting login process...');

      if (password !== ADMIN_PASSWORD) {
        throw new Error('Invalid password');
      }

      // Set the auth cookie
      document.cookie = `${AUTH_COOKIE}=${password}; path=/; secure; samesite=strict`;

      // Redirect to admin
      window.location.href = '/admin';
    } catch (error) {
      console.error('Login: Error:', error);
      if (errorMessage) {
        if (error instanceof Error) {
          errorMessage.textContent = error.message;
        } else {
          errorMessage.textContent = 'An error occurred during login';
        }
      }
    } finally {
      if (loading) loading.style.display = 'none';
    }
  });
</script>
